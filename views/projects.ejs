<!--  File name: projects.ejs
      Name: Johnson Ejeh
      StudentID: 300865958
      Date: September 27th 2023 -->

<%- include('partials/header') %>

<main id="main">
  <section id="services" class="services">
    <div class="container" data-aos="fade-up">

      <div class="section-title">
        <h2>Projects</h2>
      </div>

      <!-- helper CSS specific to this section -->
      <style>
        .icon-box {
          padding: 24px;
          border-radius: 16px;
          background: #fff;
          box-shadow: 0 10px 30px rgba(0,0,0,.06);
        }
        .icon-box .icon { margin-bottom: 12px; }
        .line-clamp {
          display: -webkit-box;
          -webkit-line-clamp: 4;       /* show 4 lines, then ellipsis */
          -webkit-box-orient: vertical;
          overflow: hidden;
        }
        .tech-tags .badge {
          margin: 2px 4px 0 0;
          font-weight: 500;
        }
      </style>

      <div class="row g-4">

        <!-- QuickCart -->
        <div class="col-lg-4 col-md-6" data-aos="zoom-in" data-aos-delay="100">
          <div class="icon-box iconbox-blue h-100 d-flex flex-column">
            <div class="icon">
              <svg width="100" height="100" viewBox="0 0 600 600" xmlns="http://www.w3.org/2000/svg">
                <path fill="#f5f5f5" d="M300,521.0C376.1,517.9,466.1,529.8,510.7,468.0C554.4,407.6,508.0,329.0,491.3,256.3C474.6,184.1,479.9,96.6,416.2,58.6C348.9,18.5,261.9,40.6,193.5,78.9C130.4,114.3,98.3,180.0,76.8,249.0C52.0,328.5,13.7,421.9,66.5,486.2C119.0,550.2,217.3,524.4,300,521.0"></path>
              </svg>
              <i class="bi bi-bag-check-fill"></i>
            </div>
            <h4><a href="https://github.com/JohnsonEjeh/quickcart">QuickCart</a></h4>
            <p class="line-clamp">
              E-commerce backend built with <strong>FastAPI</strong> + <strong>Uvicorn</strong> in a microservices architecture (auth, product, order, payment, notification).
              Services communicate asynchronously via <strong>Kafka</strong>; security with <strong>python-jose</strong> (JWT) and <strong>passlib[bcrypt]</strong>;
              data via <strong>SQLAlchemy</strong> â†’ <strong>PostgreSQL</strong>. Fully containerized with <strong>Docker</strong>/<strong>docker-compose</strong>.
            </p>
            <div class="tech-tags mt-auto">
              <span class="badge bg-light text-dark">FastAPI</span>
              <span class="badge bg-light text-dark">Kafka</span>
              <span class="badge bg-light text-dark">Docker</span>
              <span class="badge bg-light text-dark">PostgreSQL</span>
              <span class="badge bg-light text-dark">JWT</span>
            </div>
          </div>
        </div>

        <!-- Patient Management -->
        <div class="col-lg-4 col-md-6" data-aos="zoom-in" data-aos-delay="150">
          <div class="icon-box iconbox-pink h-100 d-flex flex-column">
            <div class="icon">
              <svg width="100" height="100" viewBox="0 0 600 600" xmlns="http://www.w3.org/2000/svg">
                <path fill="#f5f5f5" d="M300,541.5C382.1,545.1,479.9,548.3,526.4,480.5C571.5,414.8,517.5,332.1,496.5,255.1C477.4,185.0,473.6,105.6,413.1,65.2C343.3,18.7,251.2,5.3,175.1,40.6C97.9,76.4,52.0,156.2,36.4,239.8C21.7,319.2,43.8,401.2,96.9,462.0C147.2,519.6,223.6,538.2,300,541.5"></path>
              </svg>
              <i class="bi bi-activity"></i>
            </div>
            <h4><a href="https://github.com/JohnsonEjeh/patient-management">Patient Management</a></h4>
            <p class="line-clamp">
              Distributed healthcare platform with services for <strong>Auth</strong>, <strong>Patient</strong>, <strong>Billing</strong>, and <strong>Analytics</strong>,
              routed through an <strong>API Gateway</strong>. Inter-service calls via <strong>gRPC</strong> + <strong>Kafka</strong>.
              Provisioned on <strong>AWS</strong> using <strong>Infrastructure as Code</strong> (Terraform); all services and databases run as <strong>Docker</strong> images.
            </p>
            <div class="tech-tags mt-auto">
              <span class="badge bg-light text-dark">gRPC</span>
              <span class="badge bg-light text-dark">Kafka</span>
              <span class="badge bg-light text-dark">AWS</span>
              <span class="badge bg-light text-dark">Terraform</span>
              <span class="badge bg-light text-dark">Docker</span>
            </div>
          </div>
        </div>

        <!-- Fortify Bank API -->
        <div class="col-lg-4 col-md-6" data-aos="zoom-in" data-aos-delay="200">
          <div class="icon-box iconbox-yellow h-100 d-flex flex-column">
            <div class="icon">
              <svg width="100" height="100" viewBox="0 0 600 600" xmlns="http://www.w3.org/2000/svg">
                <path fill="#f5f5f5" d="M300,503.5C374.8,506.7,464.8,527.2,510.5,467.9C555.9,408.9,512.6,327.6,490.2,256.6C471.1,196.0,447.7,138.1,395.2,102.3C329.3,57.4,248.0,8.3,175.9,42.2C103.4,76.3,93.8,171.0,81.3,250.1C70.2,320.3,64.8,396.7,111.3,450.5C156.2,502.5,231.3,500.5,300,503.5"></path>
              </svg>
              <i class="bi bi-bank2"></i>
            </div>
            <h4><a href="https://github.com/JohnsonEjeh/Fortify-Bank-API">Fortify Bank API</a></h4>
            <p class="line-clamp">
              Secure banking backend with <strong>Java</strong> + <strong>Spring Boot</strong>, layered architecture (config, controller, dto, entity, repository, service).
              Features include account & transaction flows, <strong>JWT</strong>/<strong>Spring Security</strong> RBAC, and <strong>Spring Data JPA</strong> persistence.
              Designed for maintainability and enterprise extensibility.
            </p>
            <div class="tech-tags mt-auto">
              <span class="badge bg-light text-dark">Java</span>
              <span class="badge bg-light text-dark">Spring Boot</span>
              <span class="badge bg-light text-dark">Spring Security</span>
              <span class="badge bg-light text-dark">JWT</span>
              <span class="badge bg-light text-dark">JPA</span>
            </div>
          </div>
        </div>

        <!-- Bicycle Theft Prediction -->
        <div class="col-lg-4 col-md-6" data-aos="zoom-in" data-aos-delay="250">
          <div class="icon-box iconbox-teal h-100 d-flex flex-column">
            <div class="icon">
              <svg width="100" height="100" viewBox="0 0 600 600" xmlns="http://www.w3.org/2000/svg">
                <path fill="#f5f5f5" d="M300,566.8C385.7,576.2,478.8,552.9,531.9,484.9C584.6,417.6,582.5,322.7,554.0,242.0C529.2,172.0,465.2,127.7,396.0,100.7C334.2,76.7,269.4,84.6,207.2,107.3C132.9,134.3,41.8,160.0,22.6,236.7C3.3,314.1,72.7,379.2,124.0,440.3C172.9,498.5,224.5,558.5,300,566.8"></path>
              </svg>
              <i class="bi bi-graph-up-arrow"></i>
            </div>
            <h4><a href="https://github.com/JohnsonEjeh/bicycle-theft">Bicycle Theft Prediction</a></h4>
            <p class="line-clamp">
              <strong>Flask</strong> + <strong>Jinja</strong> app with a reproducible <strong>scikit-learn</strong> pipeline (impute/scale/encode via <em>ColumnTransformer</em>).
              Trains <strong>Logistic Regression</strong> & <strong>Decision Tree</strong> with <strong>RandomizedSearchCV</strong> and 10-fold CV; persists
              <code>logistic_regression_model.pkl</code>, <code>decision_tree_model.pkl</code> and <code>preprocessing_pipeline.pkl</code> using <strong>joblib</strong>.
            </p>
            <div class="tech-tags mt-auto">
              <span class="badge bg-light text-dark">Flask</span>
              <span class="badge bg-light text-dark">scikit-learn</span>
              <span class="badge bg-light text-dark">Pandas</span>
              <span class="badge bg-light text-dark">Jinja</span>
              <span class="badge bg-light text-dark">ML</span>
            </div>
          </div>
        </div>

      </div>

    </div>
  </section>
</main>

<%- include('partials/footer') %>

